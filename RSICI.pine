//@version=6
indicator(title = 'RSI CI Strat', shorttitle = 'RSI CI', format = format.price)
len = input(title = 'RSI len', defval = 13)
smmaLen = input(title = 'RSI MA Len', defval = 21)

ci_length = input.int(21, title = 'Chop L')
ci_threshold = input.int(44, title = 'Chop T')


ci = 100 * math.log10(math.sum(ta.atr(1), ci_length) / (ta.highest(ci_length) - ta.lowest(ci_length))) / math.log10(ci_length)
nonchop = ci <= ci_threshold

src = close

rsi = ta.rsi(src, len)

smmaSrc = rsi
rsiMA = ta.rma(smmaSrc, smmaLen)


// End ###

plot(rsi, title = 'RSI', linewidth = 2, color = color.silver)

hline(66, title = 'Middle Line', linewidth = 1, linestyle = hline.style_dashed, color = color.yellow)
hline(50, title = 'Middle Line', linewidth = 1, linestyle = hline.style_dashed, color = color.red)
hline(33, title = 'Middle Line', linewidth = 1, linestyle = hline.style_dashed, color = color.blue)

plot(rsiMA, linewidth = 2, color = color.aqua)



// END ###

STRAT_NEUTRAL = 0
STRAT_LONG = 1
STRAT_SHORT = 2
STRAT_ENTER_LONG = 3
STRAT_ENTER_SHORT = 4
STRAT_EXIT_LONG = 5
STRAT_EXIT_SHORT = 6


decodeStratCode(adx_code) =>
    adx_col = adx_code == STRAT_EXIT_LONG ? color.new(color.yellow, transp = 0) : adx_code == STRAT_EXIT_SHORT ? color.new(color.blue, transp = 0) : adx_code == STRAT_ENTER_LONG ? color.new(color.lime, transp = 0) : adx_code == STRAT_ENTER_SHORT ? color.new(color.red, transp = 0) : adx_code == STRAT_LONG ? color.new(color.aqua, transp = 60) : adx_code == STRAT_SHORT ? color.new(color.orange, transp = 60) : color.new(color.gray, transp = 60)


    adx_txt = adx_code == STRAT_EXIT_LONG ? 'ExUp' : adx_code == STRAT_EXIT_SHORT ? 'ExDn' : adx_code == STRAT_ENTER_LONG ? 'EnUp' : adx_code == STRAT_ENTER_SHORT ? 'EnDn' : adx_code == STRAT_LONG ? 'Up' : adx_code == STRAT_SHORT ? 'Dn' : 'Na'

    [adx_txt, adx_col]



UP = 1
DOWN = -1
NEUTRAL = 0

get_osc_trend(osc) =>
    osc > osc[1] ? UP : osc < osc[1] ? DOWN : NEUTRAL


rsi_trend = get_osc_trend(rsi)



rsi_bull_mom = rsiMA >= 50 and rsi >= rsiMA //and rsi_trend == UP 
rsi_bear_mom = rsiMA < 50 and rsi <= rsiMA //and rsi_trend == DOWN 


current_trend = NEUTRAL
active_position = false
longpos = false
shortpos = false


buyCond = rsiMA >= 50
sellCond = rsiMA < 50


current_trend := buyCond ? UP : sellCond ? DOWN : current_trend[1]


diPositive = current_trend == UP
diNegative = current_trend == DOWN


validlongentry = rsi_bull_mom and nonchop
validshortentry = rsi_bear_mom and nonchop


// di_crossover = (diNegative[1] and diPositive) or (diNegative and diPositive[1])


di_crossover = diNegative[1] and diPositive or diNegative and diPositive[1]

validtrend = buyCond or sellCond

closetrend = shortpos[1] and rsi_bull_mom or longpos[1] and rsi_bear_mom


noTradeZone = not validtrend or di_crossover or closetrend

current_trend := closetrend ? NEUTRAL : current_trend

active_position := (validlongentry or validshortentry) and not active_position[1] ? true : noTradeZone ? false : active_position[1]


enterLong = validlongentry and not active_position[1]
enterShort = validshortentry and not active_position[1]


longpos := buyCond and active_position
shortpos := sellCond and active_position


exitLong = noTradeZone and longpos[1]
exitShort = noTradeZone and shortpos[1]


status_code = exitLong ? STRAT_EXIT_LONG : exitShort ? STRAT_EXIT_SHORT : enterLong ? STRAT_ENTER_LONG : enterShort ? STRAT_ENTER_SHORT : longpos ? STRAT_LONG : shortpos ? STRAT_SHORT : STRAT_NEUTRAL
[txt, col] = decodeStratCode(status_code)


bgcolor(color.new(col, transp = 80))
